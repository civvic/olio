# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/15_config.ipynb.

# %% ../nbs/15_config.ipynb 1
from __future__ import annotations


# %% auto 0
__all__ = ['Config']

# %% ../nbs/15_config.ipynb
from contextlib import contextmanager


# %% ../nbs/15_config.ipynb
class Config:
    def update(self, **kwargs):
        for k,v in kwargs.items(): 
            try: setattr(self, k, v)
            except AttributeError: pass
    def show(self): print(vars(self))
    @contextmanager
    def __call__(self, **kwargs):
        vv = vars(self)
        old = {k:vv[k] for k in kwargs if k in vv}
        for k,v in kwargs.items(): setattr(self, k, v)
        yield
        for k,v in old.items(): setattr(self, k, v)

